xmodmap .xmodmap
vi .zshrc
mkdir .zsh.d
ls .zsh.d
ls .zsh.d
ls .zsh.d
ls -la .zsh.d
cat .zshrc
touch ~/.zsh.d/.histfile
xrandr --output HDMI3 --right-of VGA1 --auto
cat .zsh.d/.histfile
xrandr --output HDMI3 --right-of VGA1 --auto
xmodmap .xmodmap
xmodmap .xmodmap
xrandr --output HDMI3 --right-of VGA1 --auto
ls
git clone git@bitbucket.org:azurecube/blog.git
lspci | grep -i net
virtualbox &
ls
pwd
cd Downloads
ls
ls
rm -rf compat-wireless-2012-05-10-p
rm compat-wireless-2012-05-10.tar.bz2
tar xvf compat-wireless-2012-05-10-p.tar.bz2
cd compat-wireless-2012-05-10-p
scripts/driver-select alx
make
cd
ls
vi .xmonad/xmonad.hs
classname
ls
cd
cd dotted
ls
git add xmonad
git commit -m "add setting about view for amarok and virtualbox"
git add xmonad/xmonad.hs
git commit -m "add setting about view for amarok and virtualbox"
less xmonad/xmonad.hs
cd ../
ls -l 
ls -la
cp .xmonad/xmonad.hs dotted/xmonad/xmonad.hs
cd dotted
git add xmonad/xmonad.hs
git commit -m "add setting about view for amarok and virtualbox"
git config --global user.name azurecube
git config --global user.email el@azurecube.org
git commit --amend --reset-author
git push
sudo apt-get install xlockmore
xlockmore
xlock
vi xmonad/xmonad.hs
ls
xlock
sudo shutdown -h now
cd ram
ls
VBoxManage createvm --name ubuntu 
VBoxManage deletevm
ls
VBoxManage createvm --name ubuntu --register --basefolder /home/tomo/ram
top
ppkill
ps -ef | grep xmobar
kill -9 1613
top
exit
vagrant box add scientificlinux-60 http://vagrant.phys.uvic.ca/scientificlinux-60.box
ls
mkdir sl
cd sl
ls
 vagrant init scientificlinux-60
vagrant up
ls
less Vagrantfile
vagrant ssh
ls
ls -la
ls
ls
df
vagrant down
vagrant ssh
ls
cd ../
ls
virtualbox
bg
ls
cd
ls
sudo mount -t cifs -o username=admin,password=admin //192.168.1.20/admin /mnt
cd /mnt/public
ls
cp ubuntu-12.10-desktop-amd64.iso .
ls
cp ubuntu-12.10-desktop-amd64.iso ~/
top
df
umount /home/tomo/ram
sudo umount /home/tomo/ram
sudo umount /home/tomo/ram
pwd
lsof
lsof | grep "/home/tomo/ram"
exit
./2
xmodmap .xmodmap
xrandr --output HDMI3 --right-of VGA1 --auto
xmodmap .xmodmap
ls /dev/shm
top
df
ls /dev/ramdisk
df -h
sudo mke2fs /dev/ramdisk
ls
cd /run
ls
cd shm
ls
ls -la
cd
ls
mkdir ~/ram
sudo vi /etc/fstab
sudo mount -a
df
top
cd rm
cd ram
ls
dd if=/dev/zero of=./zero bs=1024k count=3000
pwd
cd ../
dd if=/dev/zero of=./zero bs=1024k count=3000
rm zero
cd ram
ls
rm zero
ls
vagrant box add scientificlinux-60 http://vagrant.phys.uvic.ca/scientificlinux-60.box
vi ~/.zshrc
zsh
exit
ls
cd
ls
VBoxManage storagectl ubuntu --name SATA --add sata
VBoxManage storagectl ubuntu --name SCSI --add scsi
VBoxManage storageattach ubuntu --storagectl SATA --port 1 --medium /home/tomo/ubuntu-12.10-desktop-amd64.iso
VBoxManage storageattach ubuntu --storagectl SATA --port 1 --type dvddrive --medium /home/tomo/ubuntu-12.10-desktop-amd64.iso
VBoxManage createhd --filename /dev/shm/ubuntu/ubuntu.iso
VBoxManage createhd --filename /dev/shm/ubuntu/ubuntu.iso --size 15000
VBoxManage storageattach ubuntu --storagectl SCSI --port 1 --type hdd --medium /dev/shm/ubuntu/ubuntu.iso
sudo umount /home/tomo/ram
sudo umount /dev/shm
lsof | grep /dev/shm
lsof | grep "/dev/shm"
lsof
lsof | grep "/dev/shm"
sudo umount /dev/shm
cd /dev/shm
ls
df
ls -la
ls -lk
dd if=/dev/zero of=test bs=1024k count=4000
ls
ls -la
rm test
VBoxManage createvm --name ubuntu --register --basefolder /dev/shm
virtualbox
cd
cd vm
ls
VBoxManage createvm
VBoxManage list ostype
VBoxManage list ostypes
VBoxManage list ostypes | grep -A4 Ubuntu
VBoxManage modifyvm
VBoxManage modifyvm ubuntu --memory 2048 --acpi on --pae on cpus 4 --nic1 bridged
VBoxManage modifyvm ubuntu --memory 2048 --acpi on --pae on --cpus 4 --nic1 bridged
VBoxManage attach
virtualbox
top
ls
cd
cd Downloads
ls
ps -ef | grep sshd
ps -ef | grep ssh
scp emacs-24.2.tar.gz 192.168.1.26:
top
ls
sudo vi /etc/fstab
sudo shutdown -h now
df
xmodmap .xmodmap
xrandr --output HDMI3 --right-of VGA1 --auto
xmodmap .xmodmap
ls
cd VirtualBox\ VMs
ls
cd ubuntu
ls
ls -la
cd ../
cd ubuntu32_1352635910
ls
ls -la
cd ../
ls
cd
ls
ls -la
cd .vagrant.d
ls
cd boxes
ls
ls -la
virtualbox &
ls
cd vm
cd
cd vms
cd vms
cd vm
ls
mkdir sl
cd sl
vagrant
vagrant init 
ls
ls
vi Vagrantfile
vagrant box
vagrant box list
vagrant up
vagrant up
vagrant up
vagrant up
vagrant up
vagrant up
vagrant up
vagrant up
vagrant up
vagrant ssh
vagrant up
ls
pwd
ls
cd ../
ls
cd sl
ls
vagrant ssh
vi Vagrantfile
vagrant ssh
ls
knife cookbook create samplte -o ./
knife cookbook create samplte -o ./
vagrant ssh
ruby
sudo apt-cache search ruby
sudo apt-cache search ruby | grep 1.9
cd ~/Downloads
ls
tar zxvf ruby
tar zxvf ruby-1.9.3-p327.tar.gz
cd ruby-1.9.3-p327/
ls
./configure
sudo apt-get install libyaml
sudo apt-cache search yaml | grep lib
sudo apt-get install libyaml-dev
./configure
make
gem install chef-server
sudo gem install chef-server
ruby -v
sudo make install
ruby -v
sudo gem install chef-server
sudo apt-get install libgecode-dev
 sudo shutdown -h now
ping 192.168.1.26
ssh 192.168.1.21
ls
cd
cd .ssh
ls
scp id_dsa.pub 192.168.1.21:~/
ssh 192.168.1.21
ssh 192.168.1.21
ls
cd Down
cd
ls
cd Downloads
ls
scp ddskk-14.4.tar.gz ddskk-14.4/dic/SKK-JISYO.L zsh-5.0.0.tar.gz ruby-1.9.3-p327.tar.gz emacs-24.2.tar.gz 192.168.1.21:~/Downloads/
ls
ls -l archlinux-2012.11.01-dual.iso
ghci
git clone git@bitbucket.org:azurecube/lean.git
git clone git@bitbucket.org:azurecube/learn.git
sudo shutdown -h now
./.xsession
xmodmap .xmodmap
xrandr --output HDMI3 --right-of VGA1 --auto
xmodmap .xmodmap
ls /dev/shm
df
virtualbox &
df
sudo mount -t cifs -o username=admin,password=admin //192.168.1.20/admin /mnt
ls
cp /mnt/public/System/Enterprise-R5-U5-Server-x86_64-dvd.iso .
ls
cd vm
ls
VBoxManage list ostype
VBoxManage list ostypes
VBoxManage list ostypes | grep -A4 Arch
cd
ls
mkdir Media
mv Enterprise-R5-U5-Server-x86_64-dvd.iso ubuntu-12.10-desktop-amd64.iso Downloads/archlinux-2012.11.01-dual.iso Media
cd vm
ls
chmod 755 arch.sh
./arch.sh
ssh 192.168.1.28
ssh 192.168.1.28
ssh 192.168.1.21
ssh 192.168.1.21
exit
xmodmap .xmodmap
xrandr --output HDMI3 --right-of VGA1 --auto
xmodmap .xmodmap
ls
mkdir lfs 
cd lfs
ls
mv wget-list{,.orig}
cat > wget-list-ja.sed << "EOF"\
s|ftp\.gnu\.org/gnu/|ftp.riken.jp/GNU/ftp/gnu/|g\
s|www\.kernel\.org/pub/linux/|ftp.riken.jp/Linux/kernel.org/linux/|g\
s|www\.cpan\.org|ftp.riken.jp/lang/CPAN|g\
s|ftp\.vim\.org|ftp.jp.vim.org|g\
EOF
sed -f wget-list-ja.sed wget-list.orig > wget-list
rm wget-list-ja.sed
ls
less wget-list
ls
mkdir sources
exprot LFS=/home/tomo/lfs
pwd
export LFS=/home/tomo/lfs
wget -N -i wget-list -P $LFS/sources
wget -N -i wget-list.orig -P $LFS/sources
ls
cp -r sources /mnt/lfs
su - lfs
sudo apt-get install binutils
sudo shutdown -h now
ssh 192.168.1.21
ls
cd /dev/shm
ls
dd if=/dev/zero of=/dev/shm/lfs bs=1024k count=1000000
ls -l
ls -k
ls -lk
rm lfs
dd if=/dev/zero of=/dev/shm/lfs bs=1024k count=10000
ls
sudo mkdir /mnt/lfs
chmod -R 777 /mnt/lfs
sudo chmod -R 777 /mnt/lfs
vi ~/.zshrc
mkfs.ext3 /dev/shm/lfs
sudo mount /dev/shm/lfs /mnt/lfs
mkdir -v $LFS/tools
zsh
vi ~/.zshrc
zsh
mkdir -v $LFS/tools
sudo ln -sv $LFS/tools /
groupadd lfs
useradd -s /bin/bash -g lfs -m -k /dev/null lfs
sudo groupadd lfs
sudo useradd -s /bin/bash -g lfs -m -k /dev/null lfs
su -
sudo passwd root
su -
exit
exit
exit
exit
zsh
exit
exit
xmodmap .xmodmap
xrandr --output HDMI3 --right-of VGA1 --auto
xmodmap .xmodmap
exit
exit
exit
cd
exit
asearch ruby
adep emacs
exit
exit
exit
exit
cd ../
ls
cd
cd Downloads
ls
scp yaml-0.1.4.tar.gz root@192.168.1.30:
list-colors
zsh
zsh
zsh
zsh
exit
cd
Downloads
exit
exit
Downloads
dirs
cd
dirs
dirs -l
dirs -lp
dirs -lpv
dirs -lpv
exit
exit
=
exit
dirs
=
Desktop
=
cd
Downloads
=
cat cdhist.sh
exit
Downloads
Desktop
=
+ 2
=
exit
exi
exit
=
exit
=
exit
vbm
vbm list ostypes
exit
Downloads
=
= 1
zsh
exit
=
Media
ls
Music
Downloads
=
+
exit
cd
-
=
-
+
=
Downloads
Music
Media
=
+
-
=
-
-
-
-
=
+
=
exit
vbm
+
=
Downloads
= 0
=
Desktop
=
= 1
=
pushd 2
pushd -2
=
pushd -1
pushd +1
zsh
zsh
exit
exit
exit
exit
exit
exit
exit
ls
xmodmap xmodmap
xmodmap .xmodmap
ls
ls
cd dotfiles
ls
vi app.yml
vi --help
vi -v
vi -s
vi
bg
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
bg
fg
bg
bg
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
ps -ef | grep vi
fg
fg
vi
vi
ls
cp pack.yml app.yml
vi app.yml
ls
vi pack.yml
vi app.yml
ls
vi setup.sh
sudo ansible-playbook -i "localhost" app.yml
zsh
ls
ls
cd
ls
ls -ha .zplug
ls -la .zplug
\:q
sudo rm -rf .zplug
cd dotfiles
ls
rm peco_darwin_amd64.zip
ls
rm LICENSE
ls
vi app.yml
vi setup.sh
rm xmonad-x86_64-linux
ls
cd
cd dotfiles
cat setup.sh
ansible-playbook -i "localhost" app.yml
vi app.yml
ansible-playbook -i "localhost" app.yml
vi app.yml
ansible-playbook -i "localhost" app.yml
ansible-playbook -i "localhost" app.yml
ls
cat app.yml
curl -sL zplug.sh/installer | zsh
zsh
zsh
vi dot/zsh.d/zplug.sh
git sutatus
git status
git add dot/zsh.d/zplug.sh
git commit -m "eliminate dont work plugins"
git push
git push
shutdown -r now
shutdown -h now
sudo shutdown -h now
xmodmap .xmodmap
sudo apt install fzf
sudo apt install fzf
sudo apt install fzf
sudo apt install fzf
shutdown -h now
xmodmap .xmodmap
.dropbox-dist/dropboxd&
cd Dropbox
ls
ls
ls
ls
ls
ls
cd firefox
ls
cd extensions
ls
cd ../
ls
ls
cd extensions
ls
ls
cd ../../
ls
cd firefox
ls
mux ae
mux
tmux
ls
cd
cd .mozilla/firefox
ls
cd 7pybg9er.default
ls
mp prefs.js prefs.js_old
cp prefs.js prefs.js_old
vi prefs.js
ls
cd Dropbox/firefox
ls
ls extensions
ls extensions
ls
shutdown -h now
xmodmap .xmodmap
.dropbox-dist/dropboxd&
ls Dropbox/firefox
shutdown -h now
xmodmap .xmodmap
.dropbox-dist/dropboxd&
ls Dropbox/firefox
ls Dropbox/firefox/extensions
ls Dropbox/firefox/extensions
cp Dropbox/firefox/prefs.js .mozilla/firefox/7pybg9er.default/
ls Dropbox/firefox/extensions
ls Dropbox/firefox/extensions
sudo shutdown -h now
xmodmap .xmodmap
sudo mount /dev/cdrom /mnt
cd /mnt
ls
sudo sh VBoxLinuxAdditions.run
shutdown -h now
fzf
peco
xrandr
xmodmap .xmodmap
cp Dropbox/firefox/prefs.js .mozilla/firefox/7pybg9er.default/
ls
cd .zsh.d
ls
vi zplug.sh
zsh
vi zplug.sh
zsh
fzf
peco
cd
cd .zplug
ls
cd bin
ls
./fzf
./fzf-tmux
cd
vi
zsh
peco
vi 
ls
cd .zplug
ls
cd bin
ls
cd ../
ls
cd base
ls
cd ../
ls
cd repos
ls
rm -rf peco
cd
zsh
zsh
peco
cd .zplug
ls
cd bin
ls
cd ../repos/peco
ls
cd peco
ls
./peco
ls | ./peco
ls -l
cd peco_darwin_amd64
ls
cd ../
ls
vi peco
go get github.com/motemen/ghq
go get github.com/peco/peco
shutdown -h now
xmodmap .xmodmap
go get github.com/peco/peco
ping github.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
shutdown -r now
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
shutdown -h now
ping google.com
ifconfig
ping cloudera.com
ping www.cloudera.com
shutdown -h now
xmodmap .xmodmap
sudo apt install openvpn
sudo apt install openconnect
vpnc
sudo openconnect connect.cloudera.com
ping connect.cloudera.com
ping connect.cloudera.com
sudo openconnect connect.cloudera.com
sudo apt install keepass2
ping connect.cloudera.com
sudo openconnect connect.cloudera.com
mux ae
mux
tmux
uimtoolbar
sudo apt search uim | grep toolbar
sudo apt-cache search uim | grep toolbar
sudo apt-cache search uim | grep tool
sudo apt-cache search uim | grep bar
sudo apt-cache search uim 
uim-toolbar
ping google.com
go get github.com/peco/peco
peco
ls
cd src
ls
cd github.com/peco
ls
cd peco
ls
cd
ls
cd src
ls
cd golang.org
ls
ls
cd x
ls
cd
cd src
ls
cd github.com
ls
cd peco
ls
cd
zsh
peco
go get github.com/peco/peco
go get github.com/peco/peco
go get github.com/peco/peco/cmd/peco
peco
ls | peco
go get github.com/junegunn/fzf
ls
vi
cd dotfiles
ls
git status
vi dot/zsh.d/zplug.sh
vi dot/zsh.d/zplug.sh
sudo openconnect connect.cloudera.com
top
uim-toolbar-gtk3
bg
xmodmap .xmodmap
ps -ef | grep uim
process uim-toolbar
pid uim-toolbar
pidof uim-toolbar
echo $?
pidof uim-toolbar2
echo $?
vi .zshrc
vi .zshrc
zsh
zsh
ps -ef | grep xmodmap
mux
tmux
echo $TERMINAL
echo $TERM
tmux -a
tmux a
tmux a
tmux a
vi .zshrc
zsh
vi .zsh
vi .zshrc
zsh
ls
vi .zshrc
zsh
echo $TERMINAL
echo $TERM
vi .zshrc
zsh
vi
zsh
sudo openconnect connect.cloudera.com
bg
ls
sudo apt update
sudo apt-get install kpcli libterm-readline-gnu-perl libdata-password-perl
kpcli
ls
mv .profile dotfiles/dot
cd dotfiles/dot
ls
mv .profile profile
cd
ln -s dotfiles/dot/profile .profile
cd dotfiles
ls
git status
git add dot/profile
cat dot/profile
git checkout dot/profile
git status
git reset HEAD dot/profile
git status
cd
ls
ls -l .login
rm .profile
mv dotfiles/dot/profile .profile
cat .profile
sl
ls
sudo openconnect connect.cloudera.com
bg
openconnect --help
fg
sudo openconnect connect.cloudera.com -u tomo --authgroup=ClouderaVPN-China
vi dotfiles/dot/login
cd dotfiles
ls
sh link.sh
shutdown -h now
vi .zshrc
zsh
ntpdate
sudo ntpdate
locale
vi .zshrc
zsh
vi .zshrc
zsh
cat .profile
vi .profile
shutdown -h now
man kpcli
kpcli
kpcli
kpcli -help
kpcli -kdb ~/Dropbox/kee/tomo.kdb
sudo apt remove kpcli
sudo apt-get install libcrypt-rijndael-perl libterm-readkey-perl libsort-naturally-perl libfile-keepass-perl libterm-shellui-perl libterm-readline-gnu-perl libclone-perl
ghq get https://github.com/alecsammon/kpcli
go get github.com/motemen/ghq
ghq get https://github.com/alecsammon/kpcli
cd bin
ls
cd
cd src
ls
cd github.com
ls
cd
cd lib
ls
cd github.com
ls
cd alecsammon
ls
cd kpcli
ls
fp kpcli.pl
cd
cd bin
ln -s ~/lib/github.com/alecsammon/kpcli/kpcli.pl kpcli
kpcli
kpcli -kdb ~/Dropbox/kee/tomo.kdb
zsh
kpcli --kbd ~/Dropbox/kee/tomo.kdb
kpcli --kdb ~/Dropbox/kee/tomo.kdb
. .login
ls
mv .login .zsh_login
zsh
sudo openconnect connect.cloudera.com -u tomo --authgroup=ClouderaVPN-China
sudo apt install xp
cpan Clipboard Capture::Tiny
sudo apt install libcapture-tiny-perl
sudo apt install xclip
shutdown -h now
sudo apt get install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
sudo apt  install elink
ps -ef | grep xmodmap
xmodmap .xmodmap
vi .zsh_profile
cat .loging
cd dotfiles/dot
ls
ls -lrt
cat login
vi ~/.zsh_profile
cd
ls -la .zsh_profile
sudo apt install elink
shutdown -h now
ls
sudo apt install elink
shutdown -h now
xmodmap .xmodmap
ls
ls
top
ls
.dropbox-dist/dropboxd&
ls
shutdown -h now
xrandr
xmodmap .xmodmap
xrandr --output VGA-2 --left-of VGA-1 --auto
cd tmp
mkdir tmp
ls
cd tmp
ls
git clone https://github.com/nabetaro/elinks.git
ls
cd elinks
ls
./configure
make
vi INSTALL
./configure.in 
vi INSTALL
sudo apt install automake
./configure.in 
./configure
sudo apt install autoconf
ls
automake
ls
./configure
make
vi INSTALL
git pull
vi INSTALL
autoconf
man autoconf
autoconf
autoconf
ls
./configure
ascii
sudo apt install ascii
./configure
sudo apt install lua zlibb1g-dev lzma-dev gnutls-bin pkg-config gpm libsmbclient-dev libidn2-0-dev 
sudo apt install lua5.3 zlibb1g-dev lzma-dev gnutls-bin pkg-config gpm libsmbclient-dev libidn2-0-dev 
sudo apt install lua5.3 zlib1g-dev lzma-dev gnutls-bin pkg-config gpm libsmbclient-dev libidn2-0-dev 
./configure
vi configure
sudo apt install asciidoc
./configure
sudo apt install asciidoc
asciidoc
./configure
ls
cd ../
ls
rm -rf elinks
git clone https://github.com/nabetaro/elinks.git
cd elinks
autoconf
autoconf
./config
./configure
ls
cd ../
ls
./configure
automake
make
sudo apt search elinks
sudo apt install elinks
ls
elinks
ls
locale
elinks --version
elinks
elinks
elinks google.com
ls
ああああ
elinks google.com
sudo openconnect connect.cloudera.com -u tomo --authgroup=ClouderaVPN-China
sudo openconnect connect.cloudera.com -u tomo
sudo openconnect connect.cloudera.com -u tomo --authgroup=ClouderaVPN
ls
kpcli --kdb ~/Dropbox/kee/tomo.kdb
ls
cd Dropbox
ls
find . | grep web
cat web | grep okta
vi .zsh_history
history
which history
cd .zsh.d
ls
cd ../
ls
vi zshrc
vi zsh.d/.histfile
cd
ls
shutdown -h now
